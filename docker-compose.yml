services:
  # Service
  service:
    # Uncomment to use prebuilt srcs instead of image
    build:
     context: .
    # image: decentboat/berte-service:latest
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider localhost:8080/health || exit 1"
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 20s
    depends_on:
      - db
      - kafka
    environment:
      APP_NAME: "berte-service"
      KAFKA_BROKERS: "kafka:9092"
      DB_HOST: "db"
      OTEL_HOST: "collector"
      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: "http://collector:4318/v1/metrics"
    ports:
      - "8080:8080"

  # Storage
  db:
    image: postgres:16.3
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: berte_service
      POSTGRES_USER: berte_service
      POSTGRES_DB: berte_service
    command: postgres -c shared_preload_libraries='pg_stat_statements'
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./config/db/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME : 0.0.0.0
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-txn-logs:/var/lib/zookeeper/log
      - zk-secrets:/etc/zookeeper/secrets
  kafka:
    image: confluentinc/cp-enterprise-kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LOCAL://kafka:29092,DOCKER://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: LOCAL://localhost:29092, DOCKER://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LOCAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME : 0.0.0.0
      KAFKA_JMX_OPTS : "-Dcom.sun.management.jmxremote.rmi.port=9101 -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false"
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-secrets:/etc/kafka/secrets
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - "9001:8080"
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9997

  collector:
    image: otel/opentelemetry-collector-contrib:0.102.1
    volumes:
      - ./config/config.yaml:/etc/config.yaml
    command: [ "--config=/etc/config.yaml" ]
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "4319:4319" # OTLP http receiver


volumes:
  pg_data: { }
  zk-data: { }
  zk-txn-logs: { }
  zk-secrets: { }
  kafka-data: { }
  kafka-secrets: { }
