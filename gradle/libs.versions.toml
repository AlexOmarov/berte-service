[versions]
detekt = "1.23.7"
flyway = "10.20.1"
jackson = "2.18.1"
jwt = "4.4.0"
lettuce = "6.5.0.RELEASE"
kafka = "1.3.23"
kompendium = "4.0.1"
kotlin = "2.0.21"
kotlin-datetime = "0.6.1"
kotlin-logging = "7.0.0"
kotlin-reactor = "1.9.0"
kotlin-serialization = "1.7.1"
kover = "0.8.3"
ktor = "3.0.0"
logback = "1.5.12"
logstash-logback-encoder = "8.0"
micrometer = "1.13.6"
micrometer-context-propagation = "1.1.2"
micrometer-reactor = "1.1.11"
micrometer-tracing = "1.3.5"
otel = "1.43.0"
otel-logback-encoder = "2.9.0-alpha"
otel-micrometer = "2.9.0-alpha"
postgresql = "42.7.4"
r2dbc-pool = "1.0.2.RELEASE"
r2dbc-postgresql = "1.0.7.RELEASE"
reactor-pool = "1.0.8"
rsocket-micrometer = "1.1.4"
rsocket = "0.16.0"
rsocket-transport-ktor = "0.15.4"
rsocket-transport-netty = "1.1.4"
shedlock = "5.16.0"
sonarqube = "5.1.0.4882"
swagger-annotations = "2.2.25"
testcontainers = "1.20.3"
kotlin-test = "2.1.0-Beta2"
testcontainers-redis = "2.2.2"

[libraries]
detekt-ktlint = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }
flyway-core = { group = "org.flywaydb", name = "flyway-core", version.ref = "flyway" }
flyway-postgres = { group = "org.flywaydb", name = "flyway-database-postgresql", version.ref = "flyway" }
jwt = { module = "com.auth0:java-jwt", version.ref = "jwt" }
lettuce = { module = "io.lettuce:lettuce-core", version.ref = "lettuce" }

kafka = { module = "io.projectreactor.kafka:reactor-kafka", version.ref = "kafka" }
kompendium = { group = "io.bkbn", name = "kompendium-core", version.ref = "kompendium" }
kotlin-coroutines-reactor = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "kotlin-reactor" }
kotlin-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlin-datetime" }
kotlin-logging = { group = "io.github.oshai", name = "kotlin-logging", version.ref = "kotlin-logging" }
kotlin-jackson = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }
kotlin-jackson-cbor = { group = "com.fasterxml.jackson.dataformat", name = "jackson-dataformat-cbor", version.ref = "jackson" }
kotlin-serialization-cbor = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-cbor", version.ref = "kotlin-serialization" }
kotlin-serialization-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core", version.ref = "kotlin-serialization" }
kotlin-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlin-serialization" }
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin-test" }
ktor-server-auth = { group = "io.ktor", name = "ktor-server-auth", version.ref = "ktor" }
ktor-server-call-id = { group = "io.ktor", name = "ktor-server-call-id", version.ref = "ktor" }
ktor-server-config-yaml = { group = "io.ktor", name = "ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-content-negotiation = { group = "io.ktor", name = "ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { group = "io.ktor", name = "ktor-server-core", version.ref = "ktor" }
ktor-server-metrics-micrometer = { group = "io.ktor", name = "ktor-server-metrics-micrometer", version.ref = "ktor" }
ktor-server-netty = { group = "io.ktor", name = "ktor-server-netty", version.ref = "ktor" }
ktor-server-openapi = { group = "io.ktor", name = "ktor-server-openapi", version.ref = "ktor" }
ktor-server-request-validation = { group = "io.ktor", name = "ktor-server-request-validation", version.ref = "ktor" }
ktor-server-serialization-kotlinx-cbor = { group = "io.ktor", name = "ktor-serialization-kotlinx-cbor", version.ref = "ktor" }
ktor-server-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-status-pages = { group = "io.ktor", name = "ktor-server-status-pages", version.ref = "ktor" }
ktor-server-swagger = { group = "io.ktor", name = "ktor-server-swagger", version.ref = "ktor" }
ktor-server-tests = { group = "io.ktor", name = "ktor-server-test-host", version.ref = "ktor" }
logback = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
logback-logstash = { group = "net.logstash.logback", name = "logstash-logback-encoder", version.ref = "logstash-logback-encoder" }
logback-otel = { group = "io.opentelemetry.instrumentation", name = "opentelemetry-logback-appender-1.0", version.ref = "otel-logback-encoder" }
micrometer = { group = "io.micrometer", name = "micrometer-core", version.ref = "micrometer" }
micrometer-context-propagation = { group = "io.micrometer", name = "context-propagation", version.ref = "micrometer-context-propagation" }
micrometer-reactor = { group = "io.projectreactor", name = "reactor-core-micrometer", version.ref = "micrometer-reactor" }
micrometer-tracing = { group = "io.micrometer", name = "micrometer-tracing", version.ref = "micrometer-tracing" }
micrometer-tracing-otel = { group = "io.micrometer", name = "micrometer-tracing-bridge-otel", version.ref = "micrometer-tracing" }
otel-otlp-exporter = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "otel" }
otel-micrometer = { module = "io.opentelemetry.instrumentation:opentelemetry-micrometer-1.5", version.ref = "otel-micrometer" }
postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgresql" }
r2dbc-pool = { group = "io.r2dbc", name = "r2dbc-pool", version.ref = "r2dbc-pool" }
r2dbc-postgresql = { group = "org.postgresql", name = "r2dbc-postgresql", version.ref = "r2dbc-postgresql" }
reactor-pool = { group = "io.projectreactor.addons", name = "reactor-pool", version.ref = "reactor-pool" }
rsocket-core = { group = "io.rsocket.kotlin", name = "rsocket-core", version.ref = "rsocket" }
rsocket-ktor-client = { group = "io.rsocket.kotlin", name = "rsocket-ktor-client", version.ref = "rsocket" }
rsocket-ktor-server = { group = "io.rsocket.kotlin", name = "rsocket-ktor-server", version.ref = "rsocket" }
rsocket-transport-ktor = { group = "io.rsocket.kotlin", name = "rsocket-transport-ktor", version.ref = "rsocket-transport-ktor" }
rsocket-transport-netty = { group = "io.rsocket", name = "rsocket-transport-netty", version.ref = "rsocket-transport-netty" }
rsocket-micrometer = { module = "io.rsocket:rsocket-micrometer", version.ref = "rsocket-micrometer" }
shedlock-core = { group = "net.javacrumbs.shedlock", name = "shedlock-core", version.ref = "shedlock" }
shedlock-provider-r2dbc = { group = "net.javacrumbs.shedlock", name = "shedlock-provider-r2dbc", version.ref = "shedlock" }
swagger-annotations = { group = "io.swagger.core.v3", name = "swagger-annotations", version.ref = "swagger-annotations" }
testcontainers = { group = "org.testcontainers", name = "testcontainers", version.ref = "testcontainers" }
testcontainers-kafka = { group = "org.testcontainers", name = "kafka", version.ref = "testcontainers" }
testcontainers-postgres = { group = "org.testcontainers", name = "postgresql", version.ref = "testcontainers" }
testcontainers-redis = { group = "com.redis", name = "testcontainers-redis", version.ref = "testcontainers-redis" }

[bundles]
database = ["flyway-core", "r2dbc-pool", "reactor-pool"]

kafka = ["kafka", "testcontainers-kafka"]

kotlinx = [
    "kotlin-coroutines-reactor",
    "kotlin-datetime",
    "kotlin-logging",
    "kotlin-jackson",
    "kotlin-jackson-cbor",
    "kotlin-serialization-cbor",
    "kotlin-serialization-core",
    "kotlin-serialization-json",
]

logback = ["logback", "logback-logstash", "logback-otel"]

micrometer = ["micrometer", "micrometer-reactor", "micrometer-tracing", "micrometer-tracing-otel", "micrometer-context-propagation", "otel-micrometer"]

postgres = ["flyway-postgres", "postgresql", "testcontainers-postgres", "r2dbc-postgresql"]

redis = ["lettuce", "testcontainers-redis"]

rsocket = [
    "rsocket-core",
    "rsocket-micrometer",
    "rsocket-ktor-client",
    "rsocket-ktor-server",
    "rsocket-transport-ktor",
    "rsocket-transport-netty"
]


shedlock = ["shedlock-core", "shedlock-provider-r2dbc"]

test = ["kotlin-test", "testcontainers"]

web = [
    "ktor-server-core",
    "ktor-server-auth",
    "ktor-server-netty",
    "ktor-server-tests",
    "ktor-server-openapi",
    "ktor-server-swagger",
    "ktor-server-content-negotiation",
    "ktor-server-serialization-kotlinx-cbor",
    "ktor-server-serialization-kotlinx-json",
    "ktor-server-config-yaml",
    "ktor-server-metrics-micrometer",
    "ktor-server-call-id",
    "ktor-server-request-validation",
    "ktor-server-status-pages",
    "kompendium"
]

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
